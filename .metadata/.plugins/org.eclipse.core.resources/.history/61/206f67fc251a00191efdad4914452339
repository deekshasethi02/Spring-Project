package com.example.userapp.daoimpl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.jdbc.core.namedparam.MapSqlParameterSource;
import org.springframework.jdbc.core.namedparam.SqlParameterSource;
import org.springframework.jdbc.support.GeneratedKeyHolder;
import org.springframework.jdbc.support.KeyHolder;
import org.springframework.stereotype.Repository;

import com.example.userapp.rowmapper.UserRowMapper;
import com.example.userapp.dao.BaseDAO;
import com.example.userapp.dao.UserDAO;
import com.example.userapp.domain.User;

@Repository
public class UserDAOImpl extends BaseDAO implements UserDAO {

	@Override
	public void save(User user) {
		
		String sql = "INSERT INTO users(name) VALUES(:name)";
		Map<String, Object> params = new HashMap<String, Object>();
		params.put("name", user.getName());
		SqlParameterSource paramSource = new MapSqlParameterSource(params);
		getNamedParameterJdbcTemplate().update(sql, paramSource);
	
	}

	@Override
	public void update(User user) {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void delete(Integer userId) {
		String sql = "DELETE FROM users WHERE id=?";
		getJdbcTemplate().update(sql,userId);
	}

	@Override
	public void delete(User user) {
		this.delete(user.getId());;
		
	}

	@Override
	public User findById(Integer userId) {
		String sql = "SELECT * FROM users WHERE id = ?";
		User user = getJdbcTemplate().queryForObject(sql,new UserRowMapper(), userId);
		return user;
	}

	@Override
	public List<User> findAll() {
		String sql = "SELECT * FROM users";
		List<User> users = getJdbcTemplate().query(sql, new UserRowMapper());
			return users;
	}

	@Override
	public List<User> findByProperty(String propertyName, Object propertyValue) {
		// TODO Auto-generated method stub
		return null;
	}

}
